/** Define a custom LCM operator method which can be used in the reduce method of MPI... 
    Lets assume we have a method LCM(val1,val2) which is called in normal/single process execution which calculates
    the result of LCM of two numbers and returns. Now we know that LCM operation is commutative and associative.
    Therefore we can define it as a MPI_User_function in which we can provide the method call for LCM internally.
    And then, use the above MPI_User_function with the new operator method to create a custom operator which can 
    eventually be used with Reduce method.
*/

void LCM_Op_function(int *invec,int *intoutvec,int *len,MPI_Datatype datatype) {
  int i;
  for(i=0;i<*len;i++) {
    inoutvec[i] = LCM(inoutvec[i],invec[i]);
  }
}

main() {
  
  int nums[N],resultant_lcm;
  int root = 0;

  ...

  MPI_Op LCM_OP;
  MPI_Op_create((MPI_User_function*)LCM_Op_function,1,&LCM_OP);
  
  // call MPI_Reduce(buf,resultant_lcm,count,MPI_INT,LCM_OP,root,MPI_COMM_WORLD);
  
}
